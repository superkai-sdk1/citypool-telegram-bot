import * as cron from 'node-cron';
import https from 'https';

export class KeepAliveService {
  private serviceUrl: string;

  constructor() {
    // URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
    this.serviceUrl = process.env.RENDER_SERVICE_URL || '';
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
   * –ü–∏–Ω–≥—É–µ—Ç health endpoint –∫–∞–∂–¥—ã–µ 14 –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∑–∞—Å—ã–ø–∞–Ω–∏–µ
   */
  public start() {
    if (!this.serviceUrl) {
      console.log('üîÑ RENDER_SERVICE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, self-ping –æ—Ç–∫–ª—é—á–µ–Ω');
      return;
    }

    console.log('üîÑ –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    console.log(`üìç URL —Å–µ—Ä–≤–∏—Å–∞: ${this.serviceUrl}`);

    // –ü–∏–Ω–≥—É–µ–º –∫–∞–∂–¥—ã–µ 14 –º–∏–Ω—É—Ç (–º–µ–Ω—å—à–µ 15-–º–∏–Ω—É—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ Render)
    cron.schedule('*/14 * * * *', async () => {
      await this.ping();
    }, {
      timezone: process.env.TIMEZONE || 'Europe/Moscow'
    });

    console.log('‚úÖ –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (–∫–∞–∂–¥—ã–µ 14 –º–∏–Ω—É—Ç)');
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç ping health endpoint
   */
  private async ping() {
    try {
      const url = `${this.serviceUrl}/health`;
      
      const request = https.get(url, (response) => {
        let data = '';
        
        response.on('data', (chunk) => {
          data += chunk;
        });

        response.on('end', () => {
          if (response.statusCode === 200) {
            console.log('üîÑ Self-ping —É—Å–ø–µ—à–µ–Ω');
          } else {
            console.log(`‚ö†Ô∏è Self-ping: —Å—Ç–∞—Ç—É—Å ${response.statusCode}`);
          }
        });
      });

      request.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ self-ping:', error.message);
      });

      request.setTimeout(10000, () => {
        console.error('‚è∞ –¢–∞–π–º–∞—É—Ç self-ping');
        request.destroy();
      });
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ self-ping:', error);
    }
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
   */
  public stop() {
    console.log('‚èπÔ∏è –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
  }
}
